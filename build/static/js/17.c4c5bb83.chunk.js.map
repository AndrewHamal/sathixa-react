{"version":3,"sources":["../node_modules/lazy-brush/lib/LazyPoint.js","../node_modules/lazy-brush/lib/Point.js","../node_modules/catenary-curve/lib/Point.js","../node_modules/lazy-brush/lib/index.js","../node_modules/lazy-brush/lib/LazyBrush.js","../node_modules/catenary-curve/lib/index.js","../node_modules/catenary-curve/lib/Catenary.js","../node_modules/react-canvas-draw/es/index.js","../node_modules/react-canvas-draw/es/drawImage.js"],"names":["Object","defineProperty","exports","value","obj","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_Point2","require","_Point3","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","LazyPoint","_Point","this","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","create","constructor","setPrototypeOf","_inherits","point","x","y","angle","distance","angleRotated","Math","PI","sin","cos","diff","getDifferenceTo","sqrt","pow","atan2","Point","LazyBrush","undefined","_LazyBrush2","_interopRequireDefault","_LazyPoint2","_LazyPoint","_ref","_ref$radius","radius","_ref$enabled","enabled","_ref$initialPoint","initialPoint","_isEnabled","pointer","brush","_hasMoved","toObject","newPointerPoint","_ref2","_ref2$both","both","equalsTo","update","getDistanceTo","getAngleTo","moveByAngle","Catenary","_Catenary2","_ref$segments","segments","_ref$iterationLimit","iterationLimit","p1","p2","context","point1","point2","chainLength","isFlipped","curveData","isStraight","h","v","a","getCatenaryParameter","log","cosh","offsetX","offsetY","getCurve","mx","my","drawLine","drawCurve","limit","m","acosh","prevx","count","abs","sinh","data","d","push","moveTo","lineTo","ox","oy","temp","quadraticCurveTo","_class","_temp","_extends","assign","source","hasOwnProperty","midPointBtw","canvasStyle","display","position","canvasTypes","name","zIndex","dimensionsPropTypes","PropTypes","oneOfType","number","string","_default","_PureComponent","_this","componentWillUnmount","canvasObserver","unobserve","canvasContainer","drawImage","imgSrc","image","Image","crossOrigin","onload","ctx","img","w","canvas","width","height","cx","cy","cw","ch","iw","ih","r","min","nw","nh","ar","grid","src","undo","lines","slice","clear","simulateDrawingLines","immediate","triggerOnChange","getSaveData","JSON","stringify","canvasWidth","canvasHeight","loadSaveData","saveData","immediateLoading","Error","_JSON$parse","parse","scaleX","scaleY","scaleAvg","map","line","points","p","brushRadius","curTime","timeoutGap","loadTimeOffset","forEach","brushColor","drawPoints","saveLine","_loop","window","setTimeout","handleDrawStart","e","preventDefault","isPressing","_this$getPointerPos","getPointerPos","touches","lazy","handlePointerMove","handleDrawMove","_this$getPointerPos2","handleDrawEnd","isDrawing","handleCanvasResize","entries","observer","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","next","done","_entry$contentRect","contentRect","setCanvasSize","interface","drawing","drawGrid","loop","once","style","rect","getBoundingClientRect","clientX","clientY","changedTouches","left","top","disabled","isDisabled","isEnabled","mouseHasMoved","_ref3","lineJoin","lineCap","strokeStyle","clearRect","lineWidth","beginPath","len","midPoint","stroke","_ref4","concat","onChange","valuesChanged","_ref5","_ref5$once","getPointerCoordinates","getBrushCoordinates","drawInterface","requestAnimationFrame","hideGrid","setLineDash","gridColor","countX","countY","hideInterface","fillStyle","arc","fill","catenaryColor","catenary","drawToCanvas","componentDidMount","_this2","lazyRadius","devicePixelRatio","innerWidth","innerHeight","ResizeObserver","observe","initX","initY","componentDidUpdate","prevProps","setRadius","render","_this3","React","createElement","className","background","backgroundColor","touchAction","ref","container","_ref6","isInterface","getContext","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","PureComponent","propTypes","func","bool","defaultProps"],"mappings":"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","file":"static/js/17.c4c5bb83.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Point2 = require('./Point');\n\nvar _Point3 = _interopRequireDefault(_Point2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LazyPoint = function (_Point) {\n  _inherits(LazyPoint, _Point);\n\n  function LazyPoint() {\n    _classCallCheck(this, LazyPoint);\n\n    return _possibleConstructorReturn(this, (LazyPoint.__proto__ || Object.getPrototypeOf(LazyPoint)).apply(this, arguments));\n  }\n\n  _createClass(LazyPoint, [{\n    key: 'update',\n\n    /**\n     * Update the x and y values\n     *\n     * @param {Point} point\n     */\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Move the point to another position using an angle and distance\n     *\n     * @param {number} angle The angle in radians\n     * @param {number} distance How much the point should be moved\n     */\n\n  }, {\n    key: 'moveByAngle',\n    value: function moveByAngle(angle, distance) {\n      // Rotate the angle based on the browser coordinate system ([0,0] in the top left)\n      var angleRotated = angle + Math.PI / 2;\n\n      this.x = this.x + Math.sin(angleRotated) * distance, this.y = this.y - Math.cos(angleRotated) * distance;\n    }\n\n    /**\n     * Check if this point is the same as another point\n     *\n     * @param {Point} point\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'equalsTo',\n    value: function equalsTo(point) {\n      return this.x === point.x && this.y === point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDifferenceTo',\n    value: function getDifferenceTo(point) {\n      return new _Point3.default(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDistanceTo',\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n\n    /**\n     * Calculate the angle to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getAngleTo',\n    value: function getAngleTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.atan2(diff.y, diff.x);\n    }\n\n    /**\n     * Return a simple object with x and y properties\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'toObject',\n    value: function toObject() {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    }\n  }]);\n\n  return LazyPoint;\n}(_Point3.default);\n\nexports.default = LazyPoint;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point =\n/**\n *\n * @param {number} x\n * @param {number} y\n */\nfunction Point(x, y) {\n  _classCallCheck(this, Point);\n\n  this.x = x;\n  this.y = y;\n};\n\nexports.default = Point;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point = function () {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   */\n  function Point(x, y) {\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Update the x and y values\n   *\n   * @param {Point} point\n   */\n\n\n  _createClass(Point, [{\n    key: \"update\",\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDifferenceTo\",\n    value: function getDifferenceTo(point) {\n      return new Point(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDistanceTo\",\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n  }]);\n\n  return Point;\n}();\n\nexports.default = Point;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LazyPoint = exports.Point = exports.LazyBrush = undefined;\n\nvar _LazyBrush = require('./LazyBrush');\n\nvar _LazyBrush2 = _interopRequireDefault(_LazyBrush);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.LazyBrush = _LazyBrush2.default;\nexports.Point = _Point2.default;\nexports.LazyPoint = _LazyPoint2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RADIUS_DEFAULT = 30;\n\nvar LazyBrush = function () {\n  /**\n   * constructor\n   *\n   * @param {object} settings\n   * @param {number} settings.radius The radius for the lazy area\n   * @param {boolean} settings.enabled\n   */\n  function LazyBrush() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? RADIUS_DEFAULT : _ref$radius,\n        _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === undefined ? true : _ref$enabled,\n        _ref$initialPoint = _ref.initialPoint,\n        initialPoint = _ref$initialPoint === undefined ? { x: 0, y: 0 } : _ref$initialPoint;\n\n    _classCallCheck(this, LazyBrush);\n\n    this.radius = radius;\n    this._isEnabled = enabled;\n\n    this.pointer = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n    this.brush = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n\n    this.angle = 0;\n    this.distance = 0;\n    this._hasMoved = false;\n  }\n\n  /**\n   * Enable lazy brush calculations.\n   *\n   */\n\n\n  _createClass(LazyBrush, [{\n    key: 'enable',\n    value: function enable() {\n      this._isEnabled = true;\n    }\n\n    /**\n     * Disable lazy brush calculations.\n     *\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this._isEnabled = false;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isEnabled',\n    value: function isEnabled() {\n      return this._isEnabled;\n    }\n\n    /**\n     * Update the radius\n     *\n     * @param {number} radius\n     */\n\n  }, {\n    key: 'setRadius',\n    value: function setRadius(radius) {\n      this.radius = radius;\n    }\n\n    /**\n     * Return the current radius\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: 'getRadius',\n    value: function getRadius() {\n      return this.radius;\n    }\n\n    /**\n     * Return the brush coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getBrushCoordinates',\n    value: function getBrushCoordinates() {\n      return this.brush.toObject();\n    }\n\n    /**\n     * Return the pointer coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getPointerCoordinates',\n    value: function getPointerCoordinates() {\n      return this.pointer.toObject();\n    }\n\n    /**\n     * Return the brush as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getBrush',\n    value: function getBrush() {\n      return this.brush;\n    }\n\n    /**\n     * Return the pointer as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getPointer',\n    value: function getPointer() {\n      return this.pointer;\n    }\n\n    /**\n     * Return the angle between pointer and brush\n     *\n     * @returns {number} Angle in radians\n     */\n\n  }, {\n    key: 'getAngle',\n    value: function getAngle() {\n      return this.angle;\n    }\n\n    /**\n     * Return the distance between pointer and brush\n     *\n     * @returns {number} Distance in pixels\n     */\n\n  }, {\n    key: 'getDistance',\n    value: function getDistance() {\n      return this.distance;\n    }\n\n    /**\n     * Return if the previous update has moved the brush.\n     *\n     * @returns {boolean} Whether the brush moved previously.\n     */\n\n  }, {\n    key: 'brushHasMoved',\n    value: function brushHasMoved() {\n      return this._hasMoved;\n    }\n\n    /**\n     * Updates the pointer point and calculates the new brush point.\n     *\n     * @param {Point} newPointerPoint\n     * @param {Object} options\n     * @param {Boolean} options.both Force update pointer and brush\n     * @returns {Boolean} Whether any of the two points changed\n     */\n\n  }, {\n    key: 'update',\n    value: function update(newPointerPoint) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$both = _ref2.both,\n          both = _ref2$both === undefined ? false : _ref2$both;\n\n      this._hasMoved = false;\n      if (this.pointer.equalsTo(newPointerPoint) && !both) {\n        return false;\n      }\n\n      this.pointer.update(newPointerPoint);\n\n      if (both) {\n        this._hasMoved = true;\n        this.brush.update(newPointerPoint);\n        return true;\n      }\n\n      if (this._isEnabled) {\n        this.distance = this.pointer.getDistanceTo(this.brush);\n        this.angle = this.pointer.getAngleTo(this.brush);\n\n        if (this.distance > this.radius) {\n          this.brush.moveByAngle(this.angle, this.distance - this.radius);\n          this._hasMoved = true;\n        }\n      } else {\n        this.distance = 0;\n        this.angle = 0;\n        this.brush.update(newPointerPoint);\n        this._hasMoved = true;\n      }\n\n      return true;\n    }\n  }]);\n\n  return LazyBrush;\n}();\n\nexports.default = LazyBrush;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Point = exports.Catenary = undefined;\n\nvar _Catenary = require('./Catenary');\n\nvar _Catenary2 = _interopRequireDefault(_Catenary);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Catenary = _Catenary2.default;\nexports.Point = _Point2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\niven two points and a length, calculate and draw the catenary.\nnavaScript implementation:\nopyright (c) 2018 Jan Hug <me@dulnan.net>\neleased under the MIT license.\nnnnriginal ActionScript implementation:\nopyright poiasd ( http://wonderfl.net/user/poiasd )\nicense ( http://www.opensource.org/licenses/mit-license.php )\nownloaded from: http://wonderfl.net/c/8Bnl\nnnnrchived by and downloaded from:\nhttp://wa.zozuar.org/code.php?c=8Bnl\nn\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EPSILON = 1e-6;\n\nvar Catenary = function () {\n  /**\n   * constructor\n   *\n   * @param {Object} settings\n   * @param {Number} settings.segments Number of segments of the chain.\n   * @param {Number} settings.iterationLimit Maximum amount iterations for getting catenary parameters.\n   */\n  function Catenary() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$segments = _ref.segments,\n        segments = _ref$segments === undefined ? 50 : _ref$segments,\n        _ref$iterationLimit = _ref.iterationLimit,\n        iterationLimit = _ref$iterationLimit === undefined ? 100 : _ref$iterationLimit;\n\n    _classCallCheck(this, Catenary);\n\n    this.p1 = new _Point2.default();\n    this.p2 = new _Point2.default();\n\n    this.segments = segments;\n    this.iterationLimit = iterationLimit;\n  }\n\n  /**\n   * Draws a catenary given two coordinates, a length and a context.\n   * \n   * @param {CanvasRenderingContext2D} context The canvas context to draw the catenary on to.\n   * @param {Point} p1 First point\n   * @param {Point} p2 Second point\n   * @param {Number} chainLength The length of the catenary\n   */\n\n\n  _createClass(Catenary, [{\n    key: 'drawToCanvas',\n    value: function drawToCanvas(context, point1, point2, chainLength) {\n      this.p1.update(point1);\n      this.p2.update(point2);\n\n      var isFlipped = this.p1.x > this.p2.x;\n\n      var p1 = isFlipped ? this.p2 : this.p1;\n      var p2 = isFlipped ? this.p1 : this.p2;\n\n      var distance = p1.getDistanceTo(p2);\n\n      var curveData = [];\n      var isStraight = true;\n\n      // Prevent \"expensive\" catenary calculations if it would only result\n      // in a straight line.\n      if (distance < chainLength) {\n        var diff = p2.x - p1.x;\n\n        // If the distance on the x axis of both points is too small, don't\n        // calculate a catenary.\n        if (diff > 0.01) {\n          var h = p2.x - p1.x;\n          var v = p2.y - p1.y;\n          var a = -this.getCatenaryParameter(h, v, chainLength, this.iterationLimit);\n          var x = (a * Math.log((chainLength + v) / (chainLength - v)) - h) * 0.5;\n          var y = a * Math.cosh(x / a);\n          var offsetX = p1.x - x;\n          var offsetY = p1.y - y;\n          curveData = this.getCurve(a, p1, p2, offsetX, offsetY, this.segments);\n          isStraight = false;\n        } else {\n          var mx = (p1.x + p2.x) * 0.5;\n          var my = (p1.y + p2.y + chainLength) * 0.5;\n\n          curveData = [[p1.x, p1.y], [mx, my], [p2.x, p2.y]];\n        }\n      } else {\n        curveData = [[p1.x, p1.y], [p2.x, p2.y]];\n      }\n\n      if (isStraight) {\n        this.drawLine(curveData, context);\n      } else {\n        this.drawCurve(curveData, context);\n      }\n\n      return curveData;\n    }\n\n    /**\n     * Determines catenary parameter.\n     * \n     * @param {Number} h Horizontal distance of both points.\n     * @param {Number} v Vertical distance of both points.\n     * @param {Number} length The catenary length.\n     * @param {Number} limit Maximum amount of iterations to find parameter.\n     */\n\n  }, {\n    key: 'getCatenaryParameter',\n    value: function getCatenaryParameter(h, v, length, limit) {\n      var m = Math.sqrt(length * length - v * v) / h;\n      var x = Math.acosh(m) + 1;\n      var prevx = -1;\n      var count = 0;\n\n      while (Math.abs(x - prevx) > EPSILON && count < limit) {\n        prevx = x;\n        x = x - (Math.sinh(x) - m * x) / (Math.cosh(x) - m);\n        count++;\n      }\n\n      return h / (2 * x);\n    }\n\n    /**\n     * Calculate the catenary curve.\n     * Increasing the segments value will produce a catenary closer\n     * to reality, but will require more calcluations.\n     * \n     * @param {Number} a The catenary parameter.\n     * @param {Point} p1 First point\n     * @param {Point} p2 Second point\n     * @param {Number} offsetX The calculated offset on the x axis.\n     * @param {Number} offsetY The calculated offset on the y axis.\n     * @param {Number} segments How many \"parts\" the chain should be made of.\n     */\n\n  }, {\n    key: 'getCurve',\n    value: function getCurve(a, p1, p2, offsetX, offsetY, segments) {\n      var data = [p1.x, a * Math.cosh((p1.x - offsetX) / a) + offsetY];\n\n      var d = p2.x - p1.x;\n      var length = segments - 1;\n\n      for (var i = 0; i < length; i++) {\n        var x = p1.x + d * (i + 0.5) / length;\n        var y = a * Math.cosh((x - offsetX) / a) + offsetY;\n        data.push(x, y);\n      }\n\n      data.push(p2.x, a * Math.cosh((p2.x - offsetX) / a) + offsetY);\n\n      return data;\n    }\n\n    /**\n     * Draws a straight line between two points.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     */\n\n  }, {\n    key: 'drawLine',\n    value: function drawLine(data, context) {\n      context.moveTo(data[0][0], data[0][1]);\n\n      context.lineTo(data[1][0], data[1][1]);\n    }\n\n    /**\n     * Draws a quadratic curve between every calculated catenary segment,\n     * so that the segments don't look like straight lines.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     * \n     * @returns {Array} The original segment coordinates.\n     */\n\n  }, {\n    key: 'drawCurve',\n    value: function drawCurve(data, context) {\n      var length = data.length * 0.5 - 1;\n      var ox = data[2];\n      var oy = data[3];\n\n      var temp = [];\n\n      context.moveTo(data[0], data[1]);\n\n      for (var i = 2; i < length; i++) {\n        var x = data[i * 2];\n        var y = data[i * 2 + 1];\n        var mx = (x + ox) * 0.5;\n        var my = (y + oy) * 0.5;\n        temp.push([ox, oy, mx, my]);\n        context.quadraticCurveTo(ox, oy, mx, my);\n        ox = x;\n        oy = y;\n      }\n\n      length = data.length;\n      context.quadraticCurveTo(data[length - 4], data[length - 3], data[length - 2], data[length - 1]);\n\n      return temp;\n    }\n  }]);\n\n  return Catenary;\n}();\n\nexports.default = Catenary;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\n\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nimport drawImage from \"./drawImage\";\n\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2\n  };\n}\n\nvar canvasStyle = {\n  display: \"block\",\n  position: \"absolute\"\n};\n\nvar canvasTypes = [{\n  name: \"interface\",\n  zIndex: 15\n}, {\n  name: \"drawing\",\n  zIndex: 11\n}, {\n  name: \"temp\",\n  zIndex: 12\n}, {\n  name: \"grid\",\n  zIndex: 10\n}];\n\nvar dimensionsPropTypes = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nvar _default = (_temp = _class = function (_PureComponent) {\n  _inherits(_default, _PureComponent);\n\n  function _default(props) {\n    _classCallCheck(this, _default);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.componentWillUnmount = function () {\n      _this.canvasObserver.unobserve(_this.canvasContainer);\n    };\n\n    _this.drawImage = function () {\n      if (!_this.props.imgSrc) return;\n\n      // Load the image\n      _this.image = new Image();\n\n      // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\n      _this.image.crossOrigin = \"anonymous\";\n\n      // Draw the image once loaded\n      _this.image.onload = function () {\n        return drawImage({ ctx: _this.ctx.grid, img: _this.image });\n      };\n      _this.image.src = _this.props.imgSrc;\n    };\n\n    _this.undo = function () {\n      var lines = _this.lines.slice(0, -1);\n      _this.clear();\n      _this.simulateDrawingLines({ lines: lines, immediate: true });\n      _this.triggerOnChange();\n    };\n\n    _this.getSaveData = function () {\n      // Construct and return the stringified saveData object\n      return JSON.stringify({\n        lines: _this.lines,\n        width: _this.props.canvasWidth,\n        height: _this.props.canvasHeight\n      });\n    };\n\n    _this.loadSaveData = function (saveData) {\n      var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.immediateLoading;\n\n      if (typeof saveData !== \"string\") {\n        throw new Error(\"saveData needs to be of type string!\");\n      }\n\n      var _JSON$parse = JSON.parse(saveData),\n          lines = _JSON$parse.lines,\n          width = _JSON$parse.width,\n          height = _JSON$parse.height;\n\n      if (!lines || typeof lines.push !== \"function\") {\n        throw new Error(\"saveData.lines needs to be an array!\");\n      }\n\n      _this.clear();\n\n      if (width === _this.props.canvasWidth && height === _this.props.canvasHeight) {\n        _this.simulateDrawingLines({\n          lines: lines,\n          immediate: immediate\n        });\n      } else {\n        // we need to rescale the lines based on saved & current dimensions\n        var scaleX = _this.props.canvasWidth / width;\n        var scaleY = _this.props.canvasHeight / height;\n        var scaleAvg = (scaleX + scaleY) / 2;\n\n        _this.simulateDrawingLines({\n          lines: lines.map(function (line) {\n            return _extends({}, line, {\n              points: line.points.map(function (p) {\n                return {\n                  x: p.x * scaleX,\n                  y: p.y * scaleY\n                };\n              }),\n              brushRadius: line.brushRadius * scaleAvg\n            });\n          }),\n          immediate: immediate\n        });\n      }\n    };\n\n    _this.simulateDrawingLines = function (_ref) {\n      var lines = _ref.lines,\n          immediate = _ref.immediate;\n\n      // Simulate live-drawing of the loaded lines\n      // TODO use a generator\n      var curTime = 0;\n      var timeoutGap = immediate ? 0 : _this.props.loadTimeOffset;\n\n      lines.forEach(function (line) {\n        var points = line.points,\n            brushColor = line.brushColor,\n            brushRadius = line.brushRadius;\n\n        // Draw all at once if immediate flag is set, instead of using setTimeout\n\n        if (immediate) {\n          // Draw the points\n          _this.drawPoints({\n            points: points,\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n\n          // Save line with the drawn points\n          _this.points = points;\n          _this.saveLine({ brushColor: brushColor, brushRadius: brushRadius });\n          return;\n        }\n\n        // Use timeout to draw\n\n        var _loop = function _loop(i) {\n          curTime += timeoutGap;\n          window.setTimeout(function () {\n            _this.drawPoints({\n              points: points.slice(0, i + 1),\n              brushColor: brushColor,\n              brushRadius: brushRadius\n            });\n          }, curTime);\n        };\n\n        for (var i = 1; i < points.length; i++) {\n          _loop(i);\n        }\n\n        curTime += timeoutGap;\n        window.setTimeout(function () {\n          // Save this line with its props instead of this.props\n          _this.points = points;\n          _this.saveLine({ brushColor: brushColor, brushRadius: brushRadius });\n        }, curTime);\n      });\n    };\n\n    _this.handleDrawStart = function (e) {\n      e.preventDefault();\n\n      // Start drawing\n      _this.isPressing = true;\n\n      var _this$getPointerPos = _this.getPointerPos(e),\n          x = _this$getPointerPos.x,\n          y = _this$getPointerPos.y;\n\n      if (e.touches && e.touches.length > 0) {\n        // on touch, set catenary position to touch pos\n        _this.lazy.update({ x: x, y: y }, { both: true });\n      }\n\n      // Ensure the initial down position gets added to our line\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleDrawMove = function (e) {\n      e.preventDefault();\n\n      var _this$getPointerPos2 = _this.getPointerPos(e),\n          x = _this$getPointerPos2.x,\n          y = _this$getPointerPos2.y;\n\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleDrawEnd = function (e) {\n      e.preventDefault();\n\n      // Draw to this end pos\n      _this.handleDrawMove(e);\n\n      // Stop drawing & save the drawn line\n      _this.isDrawing = false;\n      _this.isPressing = false;\n      _this.saveLine();\n    };\n\n    _this.handleCanvasResize = function (entries, observer) {\n      var saveData = _this.getSaveData();\n      for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var entry = _ref2;\n        var _entry$contentRect = entry.contentRect,\n            width = _entry$contentRect.width,\n            height = _entry$contentRect.height;\n\n        _this.setCanvasSize(_this.canvas.interface, width, height);\n        _this.setCanvasSize(_this.canvas.drawing, width, height);\n        _this.setCanvasSize(_this.canvas.temp, width, height);\n        _this.setCanvasSize(_this.canvas.grid, width, height);\n\n        _this.drawGrid(_this.ctx.grid);\n        _this.drawImage();\n        _this.loop({ once: true });\n      }\n      _this.loadSaveData(saveData, true);\n    };\n\n    _this.setCanvasSize = function (canvas, width, height) {\n      canvas.width = width;\n      canvas.height = height;\n      canvas.style.width = width;\n      canvas.style.height = height;\n    };\n\n    _this.getPointerPos = function (e) {\n      var rect = _this.canvas.interface.getBoundingClientRect();\n\n      // use cursor pos as default\n      var clientX = e.clientX;\n      var clientY = e.clientY;\n\n      // use first touch if available\n      if (e.changedTouches && e.changedTouches.length > 0) {\n        clientX = e.changedTouches[0].clientX;\n        clientY = e.changedTouches[0].clientY;\n      }\n\n      // return mouse/touch position inside canvas\n      return {\n        x: clientX - rect.left,\n        y: clientY - rect.top\n      };\n    };\n\n    _this.handlePointerMove = function (x, y) {\n      if (_this.props.disabled) return;\n\n      _this.lazy.update({ x: x, y: y });\n      var isDisabled = !_this.lazy.isEnabled();\n\n      if (_this.isPressing && !_this.isDrawing || isDisabled && _this.isPressing) {\n        // Start drawing and add point\n        _this.isDrawing = true;\n        _this.points.push(_this.lazy.brush.toObject());\n      }\n\n      if (_this.isDrawing) {\n        // Add new point\n        _this.points.push(_this.lazy.brush.toObject());\n\n        // Draw current points\n        _this.drawPoints({\n          points: _this.points,\n          brushColor: _this.props.brushColor,\n          brushRadius: _this.props.brushRadius\n        });\n      }\n\n      _this.mouseHasMoved = true;\n    };\n\n    _this.drawPoints = function (_ref3) {\n      var points = _ref3.points,\n          brushColor = _ref3.brushColor,\n          brushRadius = _ref3.brushRadius;\n\n      _this.ctx.temp.lineJoin = \"round\";\n      _this.ctx.temp.lineCap = \"round\";\n      _this.ctx.temp.strokeStyle = brushColor;\n\n      _this.ctx.temp.clearRect(0, 0, _this.ctx.temp.canvas.width, _this.ctx.temp.canvas.height);\n      _this.ctx.temp.lineWidth = brushRadius * 2;\n\n      var p1 = points[0];\n      var p2 = points[1];\n\n      _this.ctx.temp.moveTo(p2.x, p2.y);\n      _this.ctx.temp.beginPath();\n\n      for (var i = 1, len = points.length; i < len; i++) {\n        // we pick the point between pi+1 & pi+2 as the\n        // end point and p1 as our control point\n        var midPoint = midPointBtw(p1, p2);\n        _this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n        p1 = points[i];\n        p2 = points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      _this.ctx.temp.lineTo(p1.x, p1.y);\n      _this.ctx.temp.stroke();\n    };\n\n    _this.saveLine = function () {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          brushColor = _ref4.brushColor,\n          brushRadius = _ref4.brushRadius;\n\n      if (_this.points.length < 2) return;\n\n      // Save as new line\n      _this.lines.push({\n        points: [].concat(_this.points),\n        brushColor: brushColor || _this.props.brushColor,\n        brushRadius: brushRadius || _this.props.brushRadius\n      });\n\n      // Reset points array\n      _this.points.length = 0;\n\n      var width = _this.canvas.temp.width;\n      var height = _this.canvas.temp.height;\n\n      // Copy the line to the drawing canvas\n      _this.ctx.drawing.drawImage(_this.canvas.temp, 0, 0, width, height);\n\n      // Clear the temporary line-drawing canvas\n      _this.ctx.temp.clearRect(0, 0, width, height);\n\n      _this.triggerOnChange();\n    };\n\n    _this.triggerOnChange = function () {\n      _this.props.onChange && _this.props.onChange(_this);\n    };\n\n    _this.clear = function () {\n      _this.lines = [];\n      _this.valuesChanged = true;\n      _this.ctx.drawing.clearRect(0, 0, _this.canvas.drawing.width, _this.canvas.drawing.height);\n      _this.ctx.temp.clearRect(0, 0, _this.canvas.temp.width, _this.canvas.temp.height);\n    };\n\n    _this.loop = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref5$once = _ref5.once,\n          once = _ref5$once === undefined ? false : _ref5$once;\n\n      if (_this.mouseHasMoved || _this.valuesChanged) {\n        var pointer = _this.lazy.getPointerCoordinates();\n        var brush = _this.lazy.getBrushCoordinates();\n\n        _this.drawInterface(_this.ctx.interface, pointer, brush);\n        _this.mouseHasMoved = false;\n        _this.valuesChanged = false;\n      }\n\n      if (!once) {\n        window.requestAnimationFrame(function () {\n          _this.loop();\n        });\n      }\n    };\n\n    _this.drawGrid = function (ctx) {\n      if (_this.props.hideGrid) return;\n\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n      ctx.beginPath();\n      ctx.setLineDash([5, 1]);\n      ctx.setLineDash([]);\n      ctx.strokeStyle = _this.props.gridColor;\n      ctx.lineWidth = 0.5;\n\n      var gridSize = 25;\n\n      var countX = 0;\n      while (countX < ctx.canvas.width) {\n        countX += gridSize;\n        ctx.moveTo(countX, 0);\n        ctx.lineTo(countX, ctx.canvas.height);\n      }\n      ctx.stroke();\n\n      var countY = 0;\n      while (countY < ctx.canvas.height) {\n        countY += gridSize;\n        ctx.moveTo(0, countY);\n        ctx.lineTo(ctx.canvas.width, countY);\n      }\n      ctx.stroke();\n    };\n\n    _this.drawInterface = function (ctx, pointer, brush) {\n      if (_this.props.hideInterface) return;\n\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n      // Draw brush preview\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.brushColor;\n      ctx.arc(brush.x, brush.y, _this.props.brushRadius, 0, Math.PI * 2, true);\n      ctx.fill();\n\n      // Draw mouse point (the one directly at the cursor)\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n      ctx.fill();\n\n      // Draw catenary\n      if (_this.lazy.isEnabled()) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.lineCap = \"round\";\n        ctx.setLineDash([2, 4]);\n        ctx.strokeStyle = _this.props.catenaryColor;\n        _this.catenary.drawToCanvas(_this.ctx.interface, brush, pointer, _this.chainLength);\n        ctx.stroke();\n      }\n\n      // Draw brush point (the one in the middle of the brush preview)\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n      ctx.fill();\n    };\n\n    _this.canvas = {};\n    _this.ctx = {};\n\n    _this.catenary = new Catenary();\n\n    _this.points = [];\n    _this.lines = [];\n\n    _this.mouseHasMoved = true;\n    _this.valuesChanged = true;\n    _this.isDrawing = false;\n    _this.isPressing = false;\n    return _this;\n  }\n\n  _default.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      }\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n\n    this.canvasObserver = new ResizeObserver(function (entries, observer) {\n      return _this2.handleCanvasResize(entries, observer);\n    });\n    this.canvasObserver.observe(this.canvasContainer);\n\n    this.drawImage();\n    this.loop();\n\n    window.setTimeout(function () {\n      var initX = window.innerWidth / 2;\n      var initY = window.innerHeight / 2;\n      _this2.lazy.update({ x: initX - _this2.chainLength / 4, y: initY }, { both: true });\n      _this2.lazy.update({ x: initX + _this2.chainLength / 4, y: initY }, { both: false });\n      _this2.mouseHasMoved = true;\n      _this2.valuesChanged = true;\n      _this2.clear();\n\n      // Load saveData from prop if it exists\n      if (_this2.props.saveData) {\n        _this2.loadSaveData(_this2.props.saveData);\n      }\n    }, 100);\n  };\n\n  _default.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n  };\n\n  _default.prototype.render = function render() {\n    var _this3 = this;\n\n    return React.createElement(\n      \"div\",\n      {\n        className: this.props.className,\n        style: _extends({\n          display: \"block\",\n          background: this.props.backgroundColor,\n          touchAction: \"none\",\n          width: this.props.canvasWidth,\n          height: this.props.canvasHeight\n        }, this.props.style),\n        ref: function ref(container) {\n          if (container) {\n            _this3.canvasContainer = container;\n          }\n        }\n      },\n      canvasTypes.map(function (_ref6) {\n        var name = _ref6.name,\n            zIndex = _ref6.zIndex;\n\n        var isInterface = name === \"interface\";\n        return React.createElement(\"canvas\", {\n          key: name,\n          ref: function ref(canvas) {\n            if (canvas) {\n              _this3.canvas[name] = canvas;\n              _this3.ctx[name] = canvas.getContext(\"2d\");\n            }\n          },\n          style: _extends({}, canvasStyle, { zIndex: zIndex }),\n          onMouseDown: isInterface ? _this3.handleDrawStart : undefined,\n          onMouseMove: isInterface ? _this3.handleDrawMove : undefined,\n          onMouseUp: isInterface ? _this3.handleDrawEnd : undefined,\n          onMouseOut: isInterface ? _this3.handleDrawEnd : undefined,\n          onTouchStart: isInterface ? _this3.handleDrawStart : undefined,\n          onTouchMove: isInterface ? _this3.handleDrawMove : undefined,\n          onTouchEnd: isInterface ? _this3.handleDrawEnd : undefined,\n          onTouchCancel: isInterface ? _this3.handleDrawEnd : undefined\n        });\n      })\n    );\n  };\n\n  return _default;\n}(PureComponent), _class.propTypes = {\n  onChange: PropTypes.func,\n  loadTimeOffset: PropTypes.number,\n  lazyRadius: PropTypes.number,\n  brushRadius: PropTypes.number,\n  brushColor: PropTypes.string,\n  catenaryColor: PropTypes.string,\n  gridColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  hideGrid: PropTypes.bool,\n  canvasWidth: dimensionsPropTypes,\n  canvasHeight: dimensionsPropTypes,\n  disabled: PropTypes.bool,\n  imgSrc: PropTypes.string,\n  saveData: PropTypes.string,\n  immediateLoading: PropTypes.bool,\n  hideInterface: PropTypes.bool\n}, _class.defaultProps = {\n  onChange: null,\n  loadTimeOffset: 5,\n  lazyRadius: 12,\n  brushRadius: 10,\n  brushColor: \"#444\",\n  catenaryColor: \"#0a0302\",\n  gridColor: \"rgba(150,150,150,0.17)\",\n  backgroundColor: \"#FFF\",\n  hideGrid: false,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  disabled: false,\n  imgSrc: \"\",\n  saveData: \"\",\n  immediateLoading: false,\n  hideInterface: false\n}, _temp);\n\nexport { _default as default };","/** \n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\n * Original By Ken Fyrstenberg Nilsen\n * \n * Note: img must be fully loaded or have correct width & height set.\n */\nexport default function drawImageProp() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      ctx = _ref.ctx,\n      img = _ref.img,\n      x = _ref.x,\n      y = _ref.y,\n      w = _ref.w,\n      h = _ref.h,\n      offsetX = _ref.offsetX,\n      offsetY = _ref.offsetY;\n\n  // Defaults\n  if (typeof x !== \"number\") x = 0;\n  if (typeof y !== \"number\") y = 0;\n  if (typeof w !== \"number\") w = ctx.canvas.width;\n  if (typeof h !== \"number\") h = ctx.canvas.height;\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\n\n  // keep bounds [0.0, 1.0]\n  if (offsetX < 0) offsetX = 0;\n  if (offsetY < 0) offsetY = 0;\n  if (offsetX > 1) offsetX = 1;\n  if (offsetY > 1) offsetY = 1;\n\n  var iw = img.width,\n      ih = img.height,\n      r = Math.min(w / iw, h / ih),\n      nw = iw * r,\n      // new prop. width\n  nh = ih * r,\n      // new prop. height\n  cx,\n      cy,\n      cw,\n      ch,\n      ar = 1;\n\n  // decide which gap to fill\n  if (nw < w) ar = w / nw;\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\n  nw *= ar;\n  nh *= ar;\n\n  // calc source rectangle\n  cw = iw / (nw / w);\n  ch = ih / (nh / h);\n\n  cx = (iw - cw) * offsetX;\n  cy = (ih - ch) * offsetY;\n\n  // make sure source rectangle is valid\n  if (cx < 0) cx = 0;\n  if (cy < 0) cy = 0;\n  if (cw > iw) cw = iw;\n  if (ch > ih) ch = ih;\n\n  // fill image in dest. rectangle\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\n}"],"sourceRoot":""}