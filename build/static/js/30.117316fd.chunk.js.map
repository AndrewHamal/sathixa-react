{"version":3,"sources":["pages/vendor/ProfileEdit.js"],"names":["antIcon","style","fontSize","color","spin","Content","Layout","ProfileEdit","Form","useForm","form","dispatch","useDispatch","useState","loader","setLoader","userSelector","useSelector","getUser","loading","setLoading","useEffect","length","apiUser","then","res","userStore","data","className","padding","marginTop","active","size","backgroundColor","first_name","charAt","toUpperCase","last_name","phone","layout","onFinish","e","formData","FormData","Object","entries","key","value","append","updateProfile","Toast","success","message","catch","err","errors","forEach","fail","initialValues","email","date_of_birth","rider_detail","Item","label","formlayout","name","rules","required","placeholder","type","max","min","block","htmlType","indicator"],"mappings":"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","file":"static/js/30.117316fd.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\n\nimport { Layout} from \"antd\";\nimport { Avatar, Form, Input, Skeleton } from \"antd\";\nimport { apiUser, updateProfile } from \"@/api/vendor/dashboard\";\nimport { userStore, getUser } from \"@/reducers/reducers\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Toast } from \"antd-mobile\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 18, color:'#fff' }} spin />;\nconst { Content } = Layout;\n\nconst ProfileEdit = () => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const [loader, setLoader] = useState(true);\n  const userSelector = useSelector(getUser);\n  const [loading, setLoading] = useState(false);\n\n  function onFinish(e){\n    setLoading(true)\n    \n    let formData = new FormData();\n    for (const [key, value] of Object.entries(e)) {\n      if(typeof value !== \"undefined\")\n        formData.append(key, value)\n    }\n\n    updateProfile(formData)\n    .then(res => {\n      Toast.success(res?.data?.message)\n      setLoading(false)\n    }).catch(err => {\n      Object.entries(err?.data?.errors).forEach(res => {\n        res[1].forEach(res => {\n          Toast.fail(res)\n        })\n      })\n      setLoading(false)\n    })\n  }\n\n  useEffect(() => {\n\n    if(userSelector.length === 0){\n      apiUser()\n      .then(res => {\n        dispatch(userStore(res.data));\n        setLoader(false)\n      })\n    }else{\n      setLoader(false)\n    }\n\n  }, [dispatch, userSelector])\n\n  if(loader) { return <Content\n    className=\"site-layout\"\n    style={{\n      padding: \"0 14px\",\n      marginTop: 60,\n    }}\n  > <Skeleton active/></Content> }\n\n  return (\n    <Layout>\n      <Content \n       className=\"site-layout\"\n       style={{\n         padding: \"0 14px\",\n        //  marginTop: 67,\n       }}\n      >\n      <div className=\"profile-nav d-flex my-3\">\n        <div className=\"d-flex position-relative fa-xs my-2\">\n          <Avatar\n            size={40}\n            style={{\n              color: \"#f56a00\",\n              backgroundColor: \"#fde3cf\",\n            }}\n          >\n            { userSelector.first_name.charAt(0).toUpperCase() }{ userSelector.last_name.charAt(0).toUpperCase() }\n          </Avatar>\n\n          <div className=\"pl-2 my-auto\">\n            <p className=\"font-14 f-w-500 text-capitalize\">{userSelector.first_name} {userSelector.last_name}</p>\n            <p className=\"faded-text-sm pt-1\"> {userSelector.phone}</p>\n          </div>\n          <i className=\"fas fa-check-circle text-green\"></i>\n        </div>\n      </div>\n\n      <Form \n        layout=\"vertical\"\n        onFinish={onFinish}\n        form={form}\n        initialValues={{\n          first_name : userSelector.first_name,\n          last_name : userSelector.last_name,\n          email : userSelector.email,\n          phone : userSelector.phone,\n          date_of_birth : userSelector?.rider_detail?.date_of_birth\n        }}\n      >\n        <Form.Item label=\"First Name\" formlayout=\"Vertical\" name=\"first_name\" \n          rules={[{\n            required: true,\n            message: 'first name is required'\n          }]}\n        >\n          <Input placeholder=\"First Name\"/>\n        </Form.Item>\n\n        <Form.Item label=\"Last Name\" formlayout=\"Vertical\" name=\"last_name\"\n          rules={[{\n            required: true,\n            message: 'last name is required'\n          }]}\n          >\n          <Input placeholder=\"Last Name\"/>\n        </Form.Item>\n\n        <Form.Item label=\"Email Address\" name=\"email\" formlayout=\"Vertical\"\n          rules={[{\n            required: true,\n            type: 'email',\n            message: 'email is required'\n          }]}\n          >\n          <Input placeholder=\"Email\"/>\n        </Form.Item>\n        <Form.Item label=\"Phone Number\" name=\"phone\" formlayout=\"Vertical\"\n           rules={[{\n            required: true,\n            max: 10,\n            min: 10,\n          }]}\n        >\n          <Input placeholder=\"+977 9800000000\"/>\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" block htmlType={\"submit\"}>\n            {loading ? <Spin indicator={antIcon} /> : 'Update'} \n          </Button>\n        </Form.Item>\n      </Form>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default ProfileEdit;\n"],"sourceRoot":""}