{"version":3,"sources":["pages/vendor/SendTicket.js"],"names":["Content","Layout","antIcon","style","fontSize","color","spin","SubmitTicket","history","useHistory","Option","Select","useState","files","fileAll","setFile","loading","setLoading","position","zIndex","width","className","title","onBack","goBack","padding","marginTop","layout","onFinish","e","formData","FormData","Object","entries","key","value","append","length","map","res","storeTicket","then","Toast","success","data","message","push","catch","err","fail","Item","name","label","rules","required","placeholder","formlayout","cols","listType","multiple","beforeUpload","file","fileList","prevState","onRemove","filter","uid","accept","FileList","icon","type","htmlType","block","indicator"],"mappings":"yRAWQA,EAAYC,IAAZD,QAEFE,EAAU,cAAC,IAAD,CAAiBC,MAAO,CAAEC,SAAU,GAAIC,MAAM,QAAUC,MAAI,IAiI7DC,UA/HM,WACnB,IAAMC,EAAUC,cACRC,EAAWC,IAAXD,OACR,EAA2BE,mBAAS,CAAEC,MAAQ,KAA9C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KA4CA,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEd,MAAO,CAAEe,SAAU,QAASC,OAAQ,EAAGC,MAAO,QAC9CC,UAAU,2BACVC,MAAM,gBACNC,OAAQ,kBAAMf,EAAQgB,YAExB,cAACxB,EAAD,CACEqB,UAAU,cACVlB,MAAO,CACLsB,QAAS,SACTC,UAAW,IAJf,SAOE,qBAAKL,UAAU,8BAAf,SACE,eAAC,IAAD,CACEM,OAAO,WACPN,UAAU,OACVO,SA7DO,SAACC,GAAO,IAAD,EACtBZ,GAAW,GAEX,IADA,IAMgE,EAN5Da,EAAW,IAAIC,SACnB,MAA2BC,OAAOC,QAAQJ,GAA1C,eAA8C,CAAzC,0BAAOK,EAAP,KAAYC,EAAZ,KACU,OAAVA,GACDL,EAASM,OAAOF,EAAKC,GAGH,qBAAZrB,IAAkC,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASD,aAAT,eAAgBwB,QAAS,IACrD,OAAPvB,QAAO,IAAPA,GAAA,UAAAA,EAASD,aAAT,SAAgByB,KAAI,SAAAC,GAClBT,EAASM,OAAO,UAAWG,OAI/BC,YAAYV,GACXW,MAAK,SAAAF,GAAQ,IAAD,EACXG,IAAMC,QAAN,OAAcJ,QAAd,IAAcA,GAAd,UAAcA,EAAKK,YAAnB,aAAc,EAAWC,SACzB5B,GAAW,GACXT,EAAQsC,KAAK,uBACZC,OAAM,SAAAC,GAAQ,IAAD,EACd/B,GAAW,GACXyB,IAAMO,KAAN,OAAWD,QAAX,IAAWA,GAAX,UAAWA,EAAKJ,YAAhB,aAAW,EAAWC,aAqClB,UAME,cAAC,IAAKK,KAAN,CACEC,KAAK,OACLC,MAAM,cACNC,MAAO,CACL,CACEC,UAAU,EACVT,QAAS,4BANf,SAUE,eAAC,IAAD,CAAQU,YAAY,qBAApB,UACE,cAAC7C,EAAD,CAAQyB,MAAM,UAAd,qBACA,cAACzB,EAAD,CAAQyB,MAAM,SAAd,oBACA,cAACzB,EAAD,CAAQyB,MAAM,QAAd,wBAIJ,cAAC,IAAKe,KAAN,CACAE,MAAM,UACNI,WAAW,WACXL,KAAK,UACLE,MAAO,CACL,CACEC,UAAU,EACVT,QAAS,6BAPb,SAWE,cAAC,IAAD,CAAUY,KAAK,IACfF,YAAY,yBAGd,cAAC,IAAKL,KAAN,CAAWE,MAAM,aAAjB,SACE,cAAC,IAAD,CACIM,SAAS,UACTC,UAAU,EACVC,aA3EK,SAACC,EAAMC,GAKxB,OAJA/C,GAAQ,SAAAgD,GAAS,MAAK,CAClBlD,MAAM,GAAD,mBAAMkD,EAAUlD,OAAhB,CAAuBgD,SAGzB,GAuEKG,SApEG,SAACH,GAChB,IAAIhD,EAAQC,EAAQD,MAAMoD,QAAQ,SAAA1B,GAC9B,GAAGsB,EAAKK,MAAQ3B,EAAI2B,IAChB,OAAO3B,KAEfxB,EAAQ,CAACF,WAgEGsD,OAAQ,UACRC,SAAU,GANd,SAQI,cAAC,IAAD,CAAQC,KAAM,cAAC,IAAD,IAAoBhD,UAAW,WAA7C,8BAIN,cAAC,IAAK6B,KAAN,UACE,cAAC,IAAD,CAAQoB,KAAK,UAAUC,SAAS,SAASC,OAAK,EAA9C,SACGxD,EAAU,cAAC,IAAD,CAAMyD,UAAWvE,IAAc","file":"static/js/31.2287e96b.chunk.js","sourcesContent":["import { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { Layout, Upload, PageHeader, Select, Form, Input } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { storeTicket } from \"@/api/vendor/index\"\nimport { Toast } from \"antd-mobile\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst { Content } = Layout;\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 18, color:'#fff' }} spin />;\n\nconst SubmitTicket = () => {\n  const history = useHistory();\n  const { Option } = Select;\n  const [fileAll, setFile] = useState({ files : [] })\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = (e) => {\n    setLoading(true)\n    let formData = new FormData();\n    for (const [key, value] of Object.entries(e)) {\n      if(value !== null)\n        formData.append(key, value)\n    }\n\n    if(typeof fileAll !== 'undefined' && fileAll?.files?.length > 0){\n      fileAll?.files?.map(res => {\n        formData.append('image[]', res)\n      })\n    }\n\n    storeTicket(formData)\n    .then(res => {\n      Toast.success(res?.data?.message)\n      setLoading(false)\n      history.push('/ticket?type=all')\n    }).catch(err => {\n      setLoading(false)\n      Toast.fail(err?.data?.message)\n    })\n  }\n\n  const handleChange = (file, fileList) => {\n      setFile(prevState => ({\n          files: [...prevState.files, file]\n      }))\n      \n      return false;\n  }\n\n  const deleteFile = (file) => {\n      let files = fileAll.files.filter( res => {\n          if(file.uid !== res.uid)\n              return res\n      })\n      setFile({files})\n  }\n\n\n  return (\n    <Layout>\n      <PageHeader\n        style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n        className=\"site-page-header bg-red \"\n        title=\"Ticket Submit\"\n        onBack={() => history.goBack()}\n      />\n      <Content\n        className=\"site-layout\"\n        style={{\n          padding: \"0 14px\",\n          marginTop: 67,\n        }}\n      >\n        <div className=\"site-layout-background mt-3\">\n          <Form \n            layout=\"vertical\" \n            className=\"mx-2\"\n            onFinish={onFinish}\n            >\n\n            <Form.Item\n              name=\"type\"\n              label=\"Ticket Type\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please Select One type!\",\n                },\n              ]}\n            >\n              <Select placeholder=\"Select Ticket Type\">\n                <Option value=\"General\">General</Option>\n                <Option value=\"Urgent\">Urgent</Option>\n                <Option value=\"other\">Other</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item \n            label=\"Message\" \n            formlayout=\"Vertical\" \n            name=\"message\"\n            rules={[\n              {\n                required: true,\n                message: \"Please write your query!\",\n              }\n            ]}\n            >\n              <TextArea cols=\"3\" \n              placeholder=\"Write Your Message\" />\n            </Form.Item>\n\n            <Form.Item label=\"Attachment\">\n              <Upload\n                  listType=\"picture\"\n                  multiple={true}\n                  beforeUpload={handleChange}\n                  onRemove = {deleteFile}\n                  accept={'image/*'}\n                  FileList={[]}\n              >\n                  <Button icon={<UploadOutlined />} className={\"btn-none\"}>Upload Image</Button>\n              </Upload>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" block>\n                {loading ? <Spin indicator={antIcon} /> : 'Submit'}\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default SubmitTicket;\n"],"sourceRoot":""}