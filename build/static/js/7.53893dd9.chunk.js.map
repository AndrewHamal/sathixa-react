{"version":3,"sources":["components/vendor/maps/MyMap.js","pages/vendor/MapSearch.js"],"names":["L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","iconSize","Point","shadowUrl","iconRider","iconAccurate","iconLive","html","MapComp","props","geoWatch","markerLayer","leafletMap","useRef","useState","setSearch","history","useHistory","urlSearchParams","URLSearchParams","location","search","params","get","setLoading","paramsRider","setLocation","allLocations","useSelector","getLocationsVendor","dispatch","useDispatch","packageFormSelector","getPackageForm","userSelector","getUser","lat","long","options","broadcaster","process","key","cluster","wsHost","wsPort","forceTLS","disableStats","enabledTransports","useEffect","deactive","listen","window","echo","leave","rider","current","map","leafletElement","getPackage","then","res","data","vendor","control","waypoints","useZoomParameter","pointMarkerStyle","display","draggableWaypoints","summaryTemplate","info","distance","time","addTo","Echo","connector","pusher","config","authEndpoint","channel","setTimeout","package_id","setView","setLatLng","draggable","icon","zoom","document","querySelector","style","transform","heading","isMounted","refresh","watchMyLocateMe","clearGeoWatch","navigator","geolocation","clearWatch","watchPosition","coords","latitude","longitude","clearLayers","marker","bindPopup","openPopup","Nominatim","lon","addressdetails","result","address","suburb","town","city","region","county","country","display_name","value","markerSet","length","getLocations","locationStoreVendor","apiUser","status","userStore","whole_address","on","e","target","_latlng","className","center","minZoom","maxZoom","keyboard","doubleClickZoom","scrollWheelZoom","ref","id","TileLayer","url","attribution","Marker","position","Tooltip","sticky","offset","direction","opacity","first_name","last_name","onChange","latLng","inputPlaceholder","showMarker","closeResultsOnClick","openSearchOnLoad","providerOptions","type","onClick","storePackageForm","push","storeLocation","Toast","success","catch","err","fail","zIndex","right","left","bottom","fontWeight","letterSpacing","fontSize","MapSearch","doRefresh","riderParams","Content","Layout","width","onBack","title","extra","AimOutlined","prev","padding","marginTop","MyMap"],"mappings":"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","file":"static/js/7.53893dd9.chunk.js","sourcesContent":["import './Map.css'\nimport React, { Component, forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport * as L from \"leaflet\";\nimport { Point } from \"leaflet\";\nimport 'leaflet-routing-machine';\nimport * as Nominatim from \"nominatim-browser\";\nimport { Map, Marker, Popup, TileLayer, Tooltip } from \"react-leaflet\";\nimport Search from \"react-leaflet-search\"\nimport 'leaflet/dist/leaflet.css';\nimport \"leaflet/dist/leaflet.js\";\nimport { Button, Toast } from \"antd-mobile\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getLocations, storeLocation, getPackage } from \"@/api/vendor\";\nimport {\n    getLocationsVendor,\n    getUser,\n    locationStoreVendor,\n    userStore,\n    storePackageForm,\n    getPackageForm,\n} from \"@/reducers/reducers\";\nimport { apiUser } from \"@/api/vendor/dashboard\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Pusher from \"pusher-js\"\nimport Echo from 'laravel-echo';\nimport { options } from 'less';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: \"Map Marker_8.png\",\n    iconUrl: \"Map Marker_8.png\",\n    iconSize: new Point(35, 35),\n    shadowUrl: ''\n});\n\nconst iconRider = L.icon({\n    iconRetinaUrl: \"Truck_6 (1).png\",\n    iconUrl: \"Truck_6 (1).png\",\n    iconSize: new Point(35, 35),\n    shadowUrl: ''\n});\n\nconst iconAccurate = L.icon({\n    iconRetinaUrl: \"accurate.svg\",\n    iconUrl: \"accurate.svg\",\n    iconSize: new Point(40, 40),\n    shadowUrl: ''\n})\n\nconst iconVendor = L.icon({\n    iconRetinaUrl: \"Map Marker_6.png\",\n    iconUrl: \"Map Marker_6.png\",\n    iconSize: new Point(35, 35),\n    shadowUrl: ''\n});\n\nconst iconLive = L.divIcon({\n    iconRetinaUrl: \"car.png\",\n    iconUrl: \"car.png\",\n    html: `<div class=\"rider-icon\" ><img src=\"/car.png\" width=\"45\"></>`\n});\n\n\n// scooter.png\nconst MapComp = (props) => {\n\n    const leafletMap = useRef()\n    const [search, setSearch] = useState()\n    const history = useHistory()\n\n    const urlSearchParams = new URLSearchParams(history.location.search);\n    const params = urlSearchParams?.get('from');\n\n    const [loading, setLoading] = useState(true);\n\n    const paramsRider = urlSearchParams?.get('rider');\n\n    const [location, setLocation] = useState()\n\n    const allLocations = useSelector(getLocationsVendor)\n    const dispatch = useDispatch()\n\n    const packageFormSelector = useSelector(getPackageForm)\n\n    const userSelector = useSelector(getUser)\n\n    let geoWatch\n    let markerLayer\n    let lat = ''\n    let long = ''\n\n    const options = {\n        broadcaster: process.env.REACT_APP_BROADCAST,\n        key: process.env.REACT_APP_PUSHER_KEY,\n        cluster: 'ap2',\n        wsHost: 'socket.sathichha.com',\n        wsPort: 443,\n        forceTLS: true,\n        disableStats: true,\n        enabledTransports: [\"ws\", \"wss\"],\n    };\n\n    const center = [27.7081859, 85.322004]\n\n\n    // listen for real time tracking\n    const listenForRider = (map) => {\n        if (paramsRider !== null) {\n\n            window.echo = new Echo(options);\n            window.echo.connector.pusher.config.authEndpoint = `https://api.sathichha.com/broadcasting/auth`;\n\n            window.echo.channel(`vendorPackage.` + paramsRider)\n                .listen('.location', (data) => {\n                    setTimeout(() => {\n                        if (data?.package_id == paramsRider) {\n                            const { current = {} } = leafletMap;\n                            const { leafletElement: map } = current;\n\n                            if (!window.rider) {\n                                map?.setView([data.lat, data.long])\n                                window.rider = L.marker([data.lat, data.long], {\n                                    draggable: false,\n                                    icon: iconLive,\n                                    zoom: 14\n                                }).addTo(map)\n\n                                document.querySelector('.rider-icon img').style.transform = `rotate(${data.heading || 0}deg)`\n\n                            } else {\n\n                                map?.setView([data.lat, data.long])\n                                window.rider\n                                    ?.setLatLng([data.lat, data.long])\n\n                            }\n                        }\n                    }, 400)\n                });\n\n        }\n    }\n\n    useEffect(() => {\n\n        const deactive = history.listen(() => {\n            if (typeof window.echo !== \"undefined\") {\n                window.echo.leave(`vendorPackage.` + paramsRider)\n                delete window.echo\n                delete window.rider\n            }\n        })\n\n        return () => { deactive() }\n\n    }, [history, paramsRider])\n\n    // get if rider tracking \n    useEffect(() => {\n\n        const { current = {} } = leafletMap;\n        const { leafletElement: map } = current;\n\n        if (paramsRider === null) {\n            setLoading(false)\n        } else {\n            getPackage(paramsRider)\n                .then(res => {\n                    res = res.data\n\n                    if (res?.location?.lat != res?.vendor?.location?.lat || res?.location?.long != res?.vendor?.location?.long) {\n                        L.Routing.control({\n                            waypoints: [\n                                L.latLng(res?.location?.lat, res?.location?.long),\n                                L.latLng(res?.vendor?.location?.lat, res?.vendor?.location?.long)\n                            ],\n                            useZoomParameter: true,\n                            pointMarkerStyle: { display: 'none' },\n                            draggableWaypoints: false,\n                            summaryTemplate: (info) => {\n                                let summary = {\n                                    distance: info?.distance,\n                                    time: info?.time\n                                }\n                            }\n                        }).addTo(map);\n\n                        listenForRider(map)\n                    }\n\n                    setLoading(false)\n                })\n\n            let echo = new Echo(options);\n            return () => { echo.leave(`vendorPackage.` + paramsRider) }\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    // location watch\n    useEffect(() => {\n        let isMounted = true\n\n        if (props.refresh > 0 && isMounted)\n            watchMyLocateMe()\n\n        return () => { isMounted = false }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.refresh])\n\n    useEffect(() => {\n        let isMounted = true\n\n        if (props.clearGeoWatch > 0 && isMounted) {\n            navigator.geolocation.clearWatch(geoWatch);\n        }\n\n        return () => { isMounted = false }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.clearGeoWatch])\n\n    const watchMyLocateMe = (withMarker = false) => {\n        const { current = {} } = leafletMap;\n        const { leafletElement: map } = current;\n        if (typeof map !== \"undefined\") {\n            markerLayer = new L.LayerGroup().addTo(map);\n            geoWatch = navigator.geolocation.watchPosition((res) => {\n                lat = res.coords.latitude\n                long = res.coords.longitude\n                if (map) {\n                    map.setView([lat, long + .0005])\n                    markerLayer.clearLayers()\n\n\n                    if (!window.current) {\n                        window.current = L.marker([lat, long + .0005], {\n                            icon: iconAccurate,\n                            draggable: false\n                        }).addTo(map)\n                    } else {\n                        window.current.setLatLng([lat, long])\n                    }\n\n                    if (!window.marker) {\n                        window.marker = L.marker([lat, long], {\n                            draggable: true,\n                            zoom: 14\n                        }).addTo(map)\n                            .bindPopup('Drag for location change.')\n                            .openPopup()\n\n                        Nominatim.reverseGeocode({\n                            lat: lat,\n                            lon: long,\n                            addressdetails: true,\n                            \"accept-language\": \"np\",\n                            zoom: 18\n                        })\n                            .then((result) => {\n                                let location = {\n                                    'city': result.address.suburb || result.address.town || result.address.city,\n                                    'state': result.address.region || result.address.county,\n                                    'country': result.address.country,\n                                    'long': result.lon,\n                                    'lat': result.lat,\n                                    'whole_address': result.display_name\n                                }\n\n                                document.querySelector('.search-input').value = result.display_name\n                                setLocation(location)\n                                markerSet()\n                                document.querySelector('.search-input').value = result.display_name\n                            })\n\n                        markerSet()\n\n                    } else {\n                        window.marker\n                            .setLatLng([lat, long])\n                            .bindPopup('Drag for location change.')\n                    }\n\n                }\n\n            })\n        }\n\n    }\n\n    const searchEvent = (info) => {\n        const { current = {} } = leafletMap;\n        const { leafletElement: map } = current;\n        const markerLayer = new L.LayerGroup().addTo(map);\n\n        markerLayer.clearLayers()\n\n        Nominatim.reverseGeocode({\n            lat: info.latLng['lat'],\n            lon: info.latLng['lng'],\n            addressdetails: true,\n            \"accept-language\": \"np\",\n            zoom: 18\n        })\n            .then((result) => {\n                markerLayer.clearLayers();\n                window.marker.setLatLng(info.latLng)\n\n                let location = {\n                    'city': result.address.suburb || result.address.town || result.address.city,\n                    'state': result.address.region || result.address.county,\n                    'country': result.address.country,\n                    'long': result.lon,\n                    'lat': result.lat,\n                    'whole_address': result.display_name\n                }\n\n                document.querySelector('.search-input').value = result.display_name\n                setLocation(location)\n                markerSet()\n            })\n\n    }\n\n\n    useEffect(() => {\n        let isMounted = true\n\n        if (allLocations.length === 0 && isMounted) {\n            getLocations()\n                .then(res => {\n                    dispatch(locationStoreVendor(res.data))\n                })\n        }\n\n        return () => { isMounted = false }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    useEffect(() => {\n        let isMounted = true\n\n        if (userSelector.length === 0 && isMounted && paramsRider === null) {\n            apiUser().then(res => {\n                if (res.status === 200) {\n                    if (res.data.location !== null) {\n                        dispatch(userStore(res.data))\n                        document.querySelector('.search-input').value = res.data?.location?.whole_address\n                    }\n                    else {\n                        watchMyLocateMe(true)\n                        return\n                    }\n\n                }\n\n            })\n        }\n\n        if (typeof userSelector !== \"undefined\" && userSelector.location !== null && userSelector.length !== 0 && isMounted) {\n\n            if (typeof userSelector?.location?.lat !== \"undefined\") {\n                const { current = {} } = leafletMap;\n                const { leafletElement: map } = current;\n                const markerLayer = new L.LayerGroup().addTo(map);\n\n                markerLayer.clearLayers();\n\n                if(paramsRider === null) {\n                    window.marker = L.marker([userSelector?.location?.lat, userSelector?.location?.long], {\n                        draggable: true,\n                    }).addTo(map)\n                        .bindPopup('Drag to change location')\n                        .openPopup()\n                }else{\n                    window.marker = L.marker([userSelector?.location?.lat, userSelector?.location?.long], {\n                        draggable: true,\n                    }).addTo(map)\n                }\n\n                map.setView([userSelector?.location?.lat, userSelector?.location?.long])\n                markerSet()\n            }\n        }\n\n        return () => { isMounted = false }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userSelector])\n\n    const markerSet = () => {\n        window.marker.on('dragend', function (e) {\n            Nominatim.reverseGeocode({\n                lat: e?.target?._latlng['lat'],\n                lon: e?.target?._latlng['lng'],\n                addressdetails: true,\n                \"accept-language\": \"np\",\n                zoom: 18\n            })\n                .then((result) => {\n                    window.marker.setLatLng(e?.target?._latlng)\n\n                    let location = {\n                        'city': result.address.suburb || result.address.town || result.address.city,\n                        'state': result.address.region || result.address.county,\n                        'country': result.address.country,\n                        'long': result.lon,\n                        'lat': result.lat,\n                        'whole_address': result.display_name\n                    }\n                    setSearch(result.display_name)\n                    document.querySelector('.search-input').value = result.display_name\n                    setLocation(location)\n                })\n        });\n    }\n\n    const saveLocation = () => {\n        if (typeof location === \"undefined\") {\n            Toast.fail('Location is not selected', 2)\n            return;\n        }\n        if (params) {\n            dispatch(storePackageForm({ ...packageFormSelector, value: { ...packageFormSelector.value, [\"receiver_address\"]: location } }))\n            history.push('/package-form');\n        } else {\n            storeLocation(location)\n                .then(res => {\n                    navigator.geolocation.clearWatch(geoWatch);\n                    Toast.success('Location updated !!!', 2);\n                    dispatch(userStore(res.data.data))\n                    history.push('/dashboard');\n                }).catch(err => {\n                    Toast.fail('Someting went wrong', 2);\n                })\n        }\n    }\n\n    // if(loading) return ''\n\n    return (\n        <div className=\"map-container\">\n            <Map\n                center={center}\n                minZoom=\"6\"\n                maxZoom=\"18\"\n                zoom=\"15\"\n                keyboard={true}\n                doubleClickZoom={true}\n                scrollWheelZoom={true}\n                ref={leafletMap}\n                id=\"map\"\n            >\n                <TileLayer\n                    url=\"https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.png\"\n                    attribution=\"&copy; <a href=&quot;https://www.openstreetmap.org/copyright&quot;>OpenStreetMap</a> contributors\"\n                />\n                {/* all vendor locations  */}\n                {\n                    allLocations?.map((res, key) => (\n                        <Marker key={key} position={[res.location['lat'], res.location['long']]} icon={iconRider} >\n                            <Tooltip sticky offset={[0, -15.2]} direction={\"top\"} opacity={1}>\n                                <p className={\"font-weight-bold\"}>Sathixa Vendor</p>\n                                <p>{res.first_name + ' ' + res.last_name}</p>\n                            </Tooltip>\n                        </Marker>\n                    ))\n                }\n\n                {paramsRider === null ?\n                    <Search\n                        onChange={searchEvent}\n                        position=\"topleft\"\n                        inputPlaceholder=\"Search\"\n                        showMarker={false}\n                        zoom={14}\n                        closeResultsOnClick={true}\n                        openSearchOnLoad={true}\n                        providerOptions={{\n                            // searchBounds: [\n                            //     new LatLng(33.100745405144245, 46.48315429687501),\n                            //     new LatLng(44.55916341529184, 24.510498046875)\n                            // ],\n                            region: \"np\"\n                        }}\n                    >\n                    </Search>\n                    : null}\n            </Map>\n\n            { paramsRider === null ?\n                <Button type={\"primary\"}\n                    onClick={saveLocation}\n                    className={\"px-4 text-white position-absolute text-uppercase\"}\n                    style={{\n                        zIndex: \"9999999\", right: \"14px\", left: \"14px\", bottom: \"20px\", fontWeight: \"400\",\n                        letterSpacing: \".5px\",\n                        fontSize: \"16px\"\n                    }}>\n                    Confirm Address\n                </Button> : null\n            }\n        </div>\n    );\n}\n\nexport default MapComp;\n","\nimport \"leaflet/dist/leaflet.css\";\nimport MyMap from \"@/components/vendor/maps/MyMap\";\nimport { PageHeader } from \"antd\";\nimport { AimOutlined } from \"@ant-design/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport { useState} from \"react\";\nimport { Layout } from \"antd\";\n\n\nexport default function MapSearch () {\n    const history = useHistory()\n    const [refresh, doRefresh] = useState(0);\n    const [clearGeoWatch, doClearGeoWatch] = useState(0);\n    const urlSearchParams = new URLSearchParams(history.location.search);\n    const params = urlSearchParams?.get('from');\n    const riderParams = urlSearchParams?.get('rider');\n\n    const { Content } = Layout;\n    \n    const handleEvent = () => {\n        doRefresh(prev => prev + 1)\n    }\n\n    return (\n        <Layout>\n            <PageHeader\n                style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n                className=\"site-page-header bg-red \"\n                onBack={() => params ? history.push('package-form') : history.push('dashboard')}\n                title=\"Location\"\n                extra={\n                    !riderParams ?\n                    [\n                    <AimOutlined key={0} onClick={ handleEvent } className=\"my-auto text-white\"  style={{ fontSize: '21px' }} />\n                ] : ''\n            }\n            />\n            <Content\n                className=\"site-layout\"\n                style={{\n                padding: \"0\",\n                marginTop: 53,\n                }}\n            >\n                <div>\n                    <MyMap refresh={refresh} clearGeoWatch={clearGeoWatch} />\n                </div>\n                \n            </Content>\n        </Layout>\n    )\n}\n\n"],"sourceRoot":""}