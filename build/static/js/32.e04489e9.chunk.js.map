{"version":3,"sources":["pages/vendor/Ticket.js"],"names":["AllTicket","TabPane","Tabs","history","useHistory","useState","loading","setLoading","allTicket","setAllTicket","Content","Layout","getTickets","type","getTicket","then","res","data","useEffect","className","style","padding","marginTop","active","position","zIndex","width","title","onBack","goBack","defaultActiveKey","onChange","key","tab","length","image","Empty","PRESENTED_IMAGE_SIMPLE","description","map","to","id","format","createad_at","message","status"],"mappings":"+OA+IeA,UAzIG,WAChB,IAAQC,EAAYC,IAAZD,QACFE,EAAUC,cAChB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACQC,EAAYC,IAAZD,QAGFE,EAAa,WAAc,IAAbC,EAAY,uDAAP,GACvBC,YAAUD,GACTE,MAAK,SAAAC,GACFP,EAAaO,EAAIC,MACjBV,GAAW,OAsBjB,OAlBAW,qBAAU,WACRN,EAAW,KAEV,IAeAN,EAAkB,eAACI,EAAD,CACnBS,UAAU,cACVC,MAAO,CACLC,QAAS,SACTC,UAAW,IAJM,cAMnB,cAAC,IAAD,CAAUC,QAAM,OAGhB,eAAC,IAAD,WACE,cAAC,IAAD,CACEH,MAAO,CAAEI,SAAU,QAASC,OAAQ,EAAGC,MAAO,QAC9CP,UAAU,2BACVQ,MAAM,cACNC,OAAQ,kBAAMzB,EAAQ0B,YAGxB,cAACnB,EAAD,CACES,UAAU,cACVC,MAAO,CACLC,QAAS,SACTC,UAAW,IAJf,SAOE,qBAAKH,UAAU,yBAAf,SACE,eAAC,IAAD,CAAMW,iBAAiB,IAAIC,SArCnC,SAAkBC,GAEL,MAARA,GACCpB,EAAW,GAGJ,MAARoB,GACCpB,EAAW,IA8BT,UAEE,cAACX,EAAD,CAASgC,IAAI,gBAAb,SAG2B,IAArBzB,EAAU0B,OACV,cAAC,IAAD,CAAOC,MAAOC,IAAMC,uBAAwBC,YAAY,qBAEtD9B,EAAU+B,KAAI,SAACvB,EAAKgB,GAAN,OACZ,cAAC,IAAD,CAAMQ,GAAI,mBAAoBxB,EAAIyB,GAAlC,SACE,sBAAKtB,UAAU,qBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,oBAAGA,UAAU,eAAb,cAA6B,cAAC,IAAD,CAAQuB,OAAO,eAAf,SAA+B1B,EAAI2B,cAAhE,OACA,mBAAGxB,UAAU,+BAAb,SACGH,EAAI4B,eAIX,uBACA,sBAAKzB,UAAU,iCAAf,UACE,sBAAKA,UAAU,sCAAf,UACE,sBAAMA,UAAU,2BAChB,mBAAGA,UAAU,gBAAb,SAA8BH,EAAIH,UAEpC,qBAAKM,UAAU,wBAAf,SACE,mBAAGA,UAAU,WAAb,SACkB,GAAdH,EAAI6B,OAAc,sBAAM1B,UAAU,eAAhB,oBAA+C,sBAAMA,UAAU,cAAhB,+BAlBlCa,OAPpB,KAmCjC,cAAC/B,EAAD,CAASgC,IAAI,SAAb,SAG2B,IAArBzB,EAAU0B,OACV,cAAC,IAAD,CAAOC,MAAOC,IAAMC,uBAAwBC,YAAY,qBAEtD9B,EAAU+B,KAAI,SAACvB,EAAKgB,GAAN,OAEV,sBAAKb,UAAU,qBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,oBAAGA,UAAU,eAAb,cAA6B,cAAC,IAAD,CAAQuB,OAAO,eAAf,SAA+B1B,EAAI2B,cAAhE,OACA,mBAAGxB,UAAU,+BAAb,SACGH,EAAI4B,eAIX,uBACA,sBAAKzB,UAAU,iCAAf,UACE,sBAAKA,UAAU,sCAAf,UACE,sBAAMA,UAAU,2BAChB,mBAAGA,UAAU,gBAAb,SAA8BH,EAAIH,UAEpC,qBAAKM,UAAU,wBAAf,SACE,mBAAGA,UAAU,WAAb,SACkB,GAAdH,EAAI6B,OAAc,sBAAM1B,UAAU,eAAhB,oBAA+C,sBAAMA,UAAU,cAAhB,6BAjBlCa,OAR3B","file":"static/js/32.e04489e9.chunk.js","sourcesContent":["import { useHistory, Link, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { PageHeader, Skeleton, Layout, Tabs, Empty } from \"antd\";\nimport { getTicket } from \"@/api/vendor/index\"\nimport Moment from \"react-moment\";\n\nconst AllTicket = () => {\n  const { TabPane } = Tabs;\n  const history = useHistory();\n  const [loading, setLoading] = useState(true)\n  const [allTicket, setAllTicket] = useState(null)\n  const { Content } = Layout;\n\n\n  const getTickets = (type='') => {\n    getTicket(type)\n    .then(res => {\n        setAllTicket(res.data)\n        setLoading(false)\n    })\n  } \n\n  useEffect(() => {\n    getTickets(0)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n\n  function callback(key) {\n\n    if(key === '2'){\n        getTickets(0)\n    }\n\n    if(key === '3'){\n        getTickets(1)\n    }\n  }\n  \n\n  if(loading) { return <Content\n    className=\"site-layout\"\n    style={{\n      padding: \"0 14px\",\n      marginTop: 60,\n    }}\n  > <Skeleton active/></Content> }\n\n  return (\n    <Layout>\n      <PageHeader\n        style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n        className=\"site-page-header bg-red \"\n        title=\"All Tickets\"\n        onBack={() => history.goBack()}\n      />\n\n      <Content\n        className=\"site-layout\"\n        style={{\n          padding: \"0 14px\",\n          marginTop: 67,\n        }}\n      >\n        <div className=\"site-layout-background\">\n          <Tabs defaultActiveKey=\"1\" onChange={callback}>\n\n            <TabPane tab=\"Active Ticket\" key=\"2\">\n              \n                { \n                  allTicket.length === 0 ?\n                  <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Oops!! No ticket\"/>\n                  :\n                    allTicket.map((res, key) => (\n                      <Link to={'/ticket-message/'+ res.id} key={key}>\n                        <div className=\"package-card  mb-3\">\n                          <div className=\"d-flex\">\n                            <div className=\"my-auto flex-wrap\">\n                              <p className=\"message-time\"> <Moment format=\"dd mm yy h:s\">{res.createad_at}</Moment> </p>\n                              <p className=\"font-14 font-weight-600 pt-2\">\n                                {res.message}\n                              </p>\n                            </div>\n                          </div>\n                          <hr />\n                          <div className=\"d-flex justify-content-between\">\n                            <div className=\"priority-badge green-bg d-flex mr-2\">\n                              <span className=\"dot-green my-auto mr-1\"></span>\n                              <p className=\"font-10 green\">{res.type}</p>\n                            </div>\n                            <div className=\"priority-badge d-flex\">\n                              <p className=\"font-10 \">{\n                                  res.status == 0 ? <span className=\"text-success\">Active</span> : <span className=\"text-danger\">Closed</span>\n                              }</p>\n                            </div>\n                          </div>\n                        </div>\n                      </Link>\n            \n                    ))\n                }\n            </TabPane>\n            <TabPane tab=\"Closed\" key=\"3\">\n\n                {\n                  allTicket.length === 0 ?\n                  <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"Oops!! No ticket\"/>\n                  :\n                    allTicket.map((res, key) => (\n          \n                        <div className=\"package-card  mb-3\" key={key}>\n                          <div className=\"d-flex\">\n                            <div className=\"my-auto flex-wrap\">\n                              <p className=\"message-time\"> <Moment format=\"dd mm yy h:s\">{res.createad_at}</Moment> </p>\n                              <p className=\"font-14 font-weight-600 pt-2\">\n                                {res.message}\n                              </p>\n                            </div>\n                          </div>\n                          <hr />\n                          <div className=\"d-flex justify-content-between\">\n                            <div className=\"priority-badge green-bg d-flex mr-2\">\n                              <span className=\"dot-green my-auto mr-1\"></span>\n                              <p className=\"font-10 green\">{res.type}</p>\n                            </div>\n                            <div className=\"priority-badge d-flex\">\n                              <p className=\"font-10 \">{\n                                  res.status == 0 ? <span className=\"text-success\">Active</span> : <span className=\"text-danger\">Closed</span>\n                              }</p>\n                            </div>\n                          </div>\n                        </div>\n\n                    ))\n                }\n            </TabPane>\n          </Tabs>\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default AllTicket;\n"],"sourceRoot":""}